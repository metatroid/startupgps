.container
  .row.finder-intro
    .col-sm-5.welcome
      .block{ng-bind-html: "htmlSafe(finder.content)"}
      %a.btn-link{href: "#", scrollto: ".finder-progress", scrolloffset: "0"}
        Let's Go!
    .col-sm-offset-1.col-sm-6.expect
      %h2.unbold
        What to expect:
      %ul.unstyled.inline.thirds
        %li
          %figure
            <img src="/static/assets/img/time.svg" alt="">
            %br
            %figcaption
              10 minutes
        %li
          %figure
            <img src="/static/assets/img/list.svg" alt="">
            %br
            %figcaption
              31 questions
        %li
          %figure
            <img src="/static/assets/img/360.png" alt="">
            %br
            %figcaption
              360&deg; view of your startup's progress
      .assload
        %strong
          Load results
        %form{ng-submit: "loadPastAssessment(formCode)"}
          %label.sr-only{for: "assCodeOther"}
            Assessment Code
          %input#assCodeOther.form-control.ass-code{type: "text", ng-model: "formCode", placeholder: "Enter code"}
          %button.btn-link{type: "submit"}
            Go
          %span.errors
            {{assLoadErrors}}
.finder-progress{scrollfix: "0"}
  .container
    .row
      .col-md-4.non-active
        .row
          .col-sm-7.col-xs-7
            -#%a.btn-link{ui-sref: "main"}
              Return to Home
            %a.btn-link{ng-click: "resetForm()", ng-disabled: "formStarted === false", ng-class: "{disabled: formStarted === false}"}
              Reset
            %button.btn-link{type: "button", ng-click: "sendData()", loadbtn: "loadbtn"}
              Jump to Results
          .col-sm-5.col-xs-5
            %strong
              your progress bar
      .col-sm-3.col-xs-3.col-md-2
        .progress-section.team-progress
          %strong
            Team
          .overlay{ng-style: "{'left': teamPercent+'%'}"}
      .col-sm-3.col-xs-3.col-md-2
        .progress-section.product-progress
          %strong
            Product
          .overlay{ng-style: "{'left': productPercent+'%'}"}
      .col-sm-3.col-xs-3.col-md-2
        .progress-section.market-progress
          %strong
            Market
          .overlay{ng-style: "{'left': marketPercent+'%'}"}
      .col-sm-3.col-xs-3.col-md-2
        .progress-section.operations-progress
          %strong
            Operations
          .overlay{ng-style: "{'left': operationsPercent+'%'}"}
#pathfinder
  .container.team-container
    .row
      .panel
        .col-xs-12
          .row
            .col-sm-2.col-xs-3
              .panel-label.intro-panel-label
                %strong
                  Team
                %span.signal-icon.signal-icon-Team_white
            .col-sm-10.col-xs-9
              .panel-body.intro-panel-body
                %p
                  First we'd like to ask you a few questions about you and your team...
    .row
      .col-sm-12
        %form#questions.form
          .question{id: "question_{{question.id}}", ng-repeat: "question in teamQuestions", ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
            .row
              .col-xs-12.col-sm-10.col-sm-offset-2
                %fieldset
                  .query{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                    %legend
                      {{question.question_text}}
                    .subtext{ng-if: "question.question_subtext.length"}
                      {{question.question_subtext}}
                  .answer{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                    %div{ng-if: "question.question_type !== 'text'"}
                      %div.choices{ng-if: "question.question_type === 'multi'"}
                        .checkboxes{ng-class: "{columns: question.choices.length > 5}"}
                          .checkbox{ng-repeat: "choice in question.choices"}
                            .xlabel{label-fake: "click"}
                              %input{type: "checkbox", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].choices[$index].answer_text", ng-change: "answer(question, choice)"}
                              %label.radio-mock{for: "choice_{{choice.id}}"}
                                {{choice.choice_text}}
                              %span
                                {{choice.choice_text}}
                            .txt.other-txt{ng-if: "choice.include_text_field", ng-show: "formData[question.id].choices[$index].answer_text"}
                              %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                                Other
                              %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].choices[$index].other_text", ng-blur: "answer(question, choice)"}
                        %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                      %div.choices{ng-if: "question.question_type !== 'multi'"}
                        .radios{ng-class: "{'line-range': question.choices.length > 2, columns: question.choices.length > 5, inline: (question.question_type === 'range' || question.question_type === 'inline-range')}"}
                          .radio{ng-repeat: "choice in question.choices", ng-class: "{'radio-inline': (question.question_type === 'range'  || question.question_type === 'inline-range'), 'hide-alt': (question.choices.length>3)}"}
                            .xlabel{label-fake: "click"}
                              %input{type: "radio", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-change: "answer(question, choice)"}
                              %label.radio-mock{for: "choice_{{choice.id}}"}
                                {{choice.choice_text}}
                              %span
                                {{choice.choice_text}}
                            .txt.other-txt{id: "other_{{choice.id}}", ng-if: "choice.include_text_field", ng-show: "formData[question.id].user_response[0].answer_text === 'Other'"}
                              %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                                Other
                              %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text_other", ng-blur: "insertAnswer(question.id, formData[question.id].user_response[0].answer_text_other)"}
                      %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                    %div{ng-if: "question.question_type === 'text'"}
                      .txt{ng-repeat: "choice in question.choices"}
                        %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                          {{question.question_text}}
                        %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-blur: "answer(question, choice)", ng-required: "question.required"}
            .row
              .col-xs-12
                .resource.panel.fadein.fadeout{ng-if: "question.question_resources", ng-show: "formData[question.id].user_response.length"}
                  .resource-wrapper
                    .row
                      .col-xs-3.col-sm-2
                        .resource-label.panel-label{ng-if: "question.theme"}
                          %strong
                            {{question.theme.name}}
                          %span.signal-icon.signal-icon-Team_white.block-align
                      .col-xs-9.col-sm-8
                        .resource-content.panel-body
                          .resource-intro{ng-bind-html: "htmlSafe(question.question_resources.intro_text)"}
                      .col-xs-12.col-sm-8.col-sm-offset-2
                        .resource-detail
                          %strong
                            %a{href: "{{question.question_resources.url}}", target: "_blank", title: "{{question.question_resources.title}}"}
                              {{question.question_resources.title}}
                          %p
                            {{question.question_resources.description}}
                .resource.panel.fadein.fadeout{ng-repeat: "choice in question.choices", ng-if: "choice.choice_resources", ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                    .resource-wrapper
                      .row
                        .col-xs-3.col-sm-2
                          .resource-label.panel-label{ng-if: "choice.theme"}
                            %strong
                              {{choice.theme.name}}
                            %span.signal-icon.signal-icon-Team_white.block-align
                          .resource-label.panel-label{ng-if: "question.theme && !choice.theme"}
                            %strong
                              {{question.theme.name}}
                            %span.signal-icon.signal-icon-Team_white
                        .col-xs-9.col-sm-8
                          .resource-content.panel-body
                            .resource-intro{ng-bind-html: "htmlSafe(choice.choice_resources.intro_text)"}
                        .col-xs-12.col-sm-8.col-sm-offset-2
                          .resource-detail
                            %strong
                              %a{href: "{{choice.choice_resources.url}}", target: "_blank", title: "{{choice.choice_resources.title}}"}
                                {{choice.choice_resources.title}}
                            %p
                              {{choice.choice_resources.description}}
                .feedback{ng-if: "question.question_feedback"}
                  .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response.length"}
                    .row
                      .col-xs-8.col-xs-offset-2
                        .feedback-content{ng-bind-html: "htmlSafe(question.question_feedback)"}
                .feedback{ng-repeat: "choice in question.choices", ng-if: "choice.choice_feedback"}
                  .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                    .row
                      .col-xs-8.col-xs-offset-2
                        .feedback-content{ng-bind-html: "htmlSafe(choice.choice_feedback)"}

.container.product-container
  .row
    .panel
      .col-sm-12
        .row
          .col-sm-2.col-xs-12
            .panel-label
              %strong
                Product
              %span.signal-icon.signal-icon-Product_white.block-align
              
  .row
    .col-sm-12
      %form#questions.form
        .question{id: "question_{{question.id}}", ng-repeat: "question in productQuestions", ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
          .row
            .col-xs-12.col-sm-10.col-sm-offset-2
              %fieldset
                .query{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                  %legend
                    {{question.question_text}}
                  .subtext{ng-if: "question.question_subtext.length"}
                    {{question.question_subtext}}
                .answer{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                  %div{ng-if: "question.question_type !== 'text'"}
                    %div.choices{ng-if: "question.question_type === 'multi'"}
                      .checkboxes{ng-class: "{columns: question.choices.length > 5}"}
                        .checkbox{ng-repeat: "choice in question.choices"}
                          .xlabel{label-fake: "click"}
                            %input{type: "checkbox", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].choices[$index].answer_text", ng-change: "answer(question, choice)"}
                            %label.radio-mock{for: "choice_{{choice.id}}"}
                              {{choice.choice_text}}
                            %span
                              {{choice.choice_text}}
                          .txt.other-txt{ng-if: "choice.include_text_field", ng-show: "formData[question.id].choices[$index].answer_text"}
                            %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                              Other
                            %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].choices[$index].other_text", ng-blur: "answer(question, choice)"}
                      %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                    %div.choices{ng-if: "question.question_type !== 'multi'"}
                      .radios{ng-class: "{'line-range': question.choices.length > 2, columns: question.choices.length > 5, inline: (question.question_type === 'range' || question.question_type === 'inline-range')}"}
                        .radio{ng-repeat: "choice in question.choices", ng-class: "{'radio-inline': (question.question_type === 'range'  || question.question_type === 'inline-range'), 'hide-alt': (question.choices.length>3)}"}
                          .xlabel{label-fake: "click"}
                            %input{type: "radio", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-change: "answer(question, choice)"}
                            %label.radio-mock{for: "choice_{{choice.id}}"}
                              {{choice.choice_text}}
                            %span
                              {{choice.choice_text}}
                          .txt.other-txt{id: "other_{{choice.id}}", ng-if: "choice.include_text_field", ng-show: "formData[question.id].user_response[0].answer_text === 'Other'"}
                            %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                              Other
                            %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text_other", ng-blur: "insertAnswer(question.id, formData[question.id].user_response[0].answer_text_other)"}
                    %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                  %div{ng-if: "question.question_type === 'text'"}
                    .txt{ng-repeat: "choice in question.choices"}
                      %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                        {{question.question_text}}
                      %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-blur: "answer(question, choice)", ng-required: "question.required"}
          .row
            .col-xs-12
              .resource.panel.fadein.fadeout{ng-if: "question.question_resources", ng-show: "formData[question.id].user_response.length"}
                .resource-wrapper
                  .row
                    .col-xs-3.col-sm-2
                      .resource-label.panel-label{ng-if: "question.theme"}
                        %strong
                          {{question.theme.name}}
                        %span.signal-icon.signal-icon-Product_white.block-align
                    .col-xs-9.col-sm-8
                      .resource-content.panel-body
                        .resource-intro{ng-bind-html: "htmlSafe(question.question_resources.intro_text)"}
                    .col-xs-12.col-sm-8.col-sm-offset-2
                      .resource-detail
                        %strong
                          %a{href: "{{question.question_resources.url}}", target: "_blank", title: "{{question.question_resources.title}}"}
                            {{question.question_resources.title}}
                        %p
                          {{question.question_resources.description}}
              .resource.panel.fadein.fadeout{ng-repeat: "choice in question.choices", ng-if: "choice.choice_resources", ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                  .resource-wrapper
                    .row
                      .col-xs-3.col-sm-2
                        .resource-label.panel-label{ng-if: "choice.theme"}
                          %strong
                            {{choice.theme.name}}
                          %span.signal-icon.signal-icon-Product_white.block-align
                        .resource-label.panel-label{ng-if: "question.theme && !choice.theme"}
                          %strong
                            {{question.theme.name}}
                          -#%img{src: "/static/assets/img/wtfman.png", alt: "{{question.theme.name}}"}
                      .col-xs-9.col-sm-8
                        .resource-content.panel-body
                          .resource-intro{ng-bind-html: "htmlSafe(choice.choice_resources.intro_text)"}
                      .col-xs-12.col-sm-8.col-sm-offset-2
                        .resource-detail
                          %strong
                            %a{href: "{{choice.choice_resources.url}}", target: "_blank", title: "{{choice.choice_resources.title}}"}
                              {{choice.choice_resources.title}}
                          %p
                            {{choice.choice_resources.description}}
              .feedback{ng-if: "question.question_feedback"}
                .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response.length"}
                  .row
                    .col-xs-8.col-xs-offset-2
                      .feedback-content{ng-bind-html: "htmlSafe(question.question_feedback)"}
              .feedback{ng-repeat: "choice in question.choices", ng-if: "choice.choice_feedback"}
                .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                  .row
                    .col-xs-8.col-xs-offset-2
                      .feedback-content{ng-bind-html: "htmlSafe(choice.choice_feedback)"}


.container.market-container
  .row
    .panel
      .col-sm-12
        .row
          .col-sm-2.col-xs-12
            .panel-label
              %strong
                Market
              %span.signal-icon.signal-icon-Market_white.block-align
              
  .row
    .col-sm-12
      %form#questions.form
        .question{id: "question_{{question.id}}", ng-repeat: "question in marketQuestions", ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
          .row
            .col-xs-12.col-sm-10.col-sm-offset-2
              %fieldset
                .query{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                  %legend
                    {{question.question_text}}
                  .subtext{ng-if: "question.question_subtext.length"}
                    {{question.question_subtext}}
                .answer{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                  %div{ng-if: "question.question_type !== 'text'"}
                    %div.choices{ng-if: "question.question_type === 'multi'"}
                      .checkboxes{ng-class: "{columns: question.choices.length > 5}"}
                        .checkbox{ng-repeat: "choice in question.choices"}
                          .xlabel{label-fake: "click"}
                            %input{type: "checkbox", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].choices[$index].answer_text", ng-change: "answer(question, choice)"}
                            %label.radio-mock{for: "choice_{{choice.id}}"}
                              {{choice.choice_text}}
                            %span
                              {{choice.choice_text}}
                          .txt.other-txt{ng-if: "choice.include_text_field", ng-show: "formData[question.id].choices[$index].answer_text"}
                            %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                              Other
                            %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].choices[$index].other_text", ng-blur: "answer(question, choice)"}
                      %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                    %div.choices{ng-if: "question.question_type !== 'multi'"}
                      .radios{ng-class: "{'line-range': question.choices.length > 2, columns: question.choices.length > 5, inline: (question.question_type === 'range' || question.question_type === 'inline-range')}"}
                        .radio{ng-repeat: "choice in question.choices", ng-class: "{'radio-inline': (question.question_type === 'range'  || question.question_type === 'inline-range'), 'hide-alt': (question.choices.length>3)}"}
                          .xlabel{label-fake: "click"}
                            %input{type: "radio", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-change: "answer(question, choice)"}
                            %label.radio-mock{for: "choice_{{choice.id}}"}
                              {{choice.choice_text}}
                            %span
                              {{choice.choice_text}}
                          .txt.other-txt{id: "other_{{choice.id}}", ng-if: "choice.include_text_field", ng-show: "formData[question.id].user_response[0].answer_text === 'Other'"}
                            %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                              Other
                            %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text_other", ng-blur: "insertAnswer(question.id, formData[question.id].user_response[0].answer_text_other)"}
                    %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                  %div{ng-if: "question.question_type === 'text'"}
                    .txt{ng-repeat: "choice in question.choices"}
                      %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                        {{question.question_text}}
                      %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-blur: "answer(question, choice)", ng-required: "question.required"}
          .row
            .col-xs-12
              .resource.panel.fadein.fadeout{ng-if: "question.question_resources", ng-show: "formData[question.id].user_response.length"}
                .resource-wrapper
                  .row
                    .col-xs-3.col-sm-2
                      .resource-label.panel-label{ng-if: "question.theme"}
                        %strong
                          {{question.theme.name}}
                        %span.signal-icon.signal-icon-Market_white.block-align
                    .col-xs-9.col-sm-8
                      .resource-content.panel-body
                        .resource-intro{ng-bind-html: "htmlSafe(question.question_resources.intro_text)"}
                    .col-xs-12.col-sm-8.col-sm-offset-2
                      .resource-detail
                        %strong
                          %a{href: "{{question.question_resources.url}}", target: "_blank", title: "{{question.question_resources.title}}"}
                            {{question.question_resources.title}}
                        %p
                          {{question.question_resources.description}}
              .resource.panel.fadein.fadeout{ng-repeat: "choice in question.choices", ng-if: "choice.choice_resources", ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                  .resource-wrapper
                    .row
                      .col-xs-3.col-sm-2
                        .resource-label.panel-label{ng-if: "choice.theme"}
                          %strong
                            {{choice.theme.name}}
                          %span.signal-icon.signal-icon-Market_white.block-align
                        .resource-label.panel-label{ng-if: "question.theme && !choice.theme"}
                          %strong
                            {{question.theme.name}}
                          %span.signal-icon.signal-icon-Market_white
                      .col-xs-9.col-sm-8
                        .resource-content.panel-body
                          .resource-intro{ng-bind-html: "htmlSafe(choice.choice_resources.intro_text)"}
                      .col-xs-12.col-sm-8.col-sm-offset-2
                        .resource-detail
                          %strong
                            %a{href: "{{choice.choice_resources.url}}", target: "_blank", title: "{{choice.choice_resources.title}}"}
                              {{choice.choice_resources.title}}
                          %p
                            {{choice.choice_resources.description}}
              .feedback{ng-if: "question.question_feedback"}
                .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response.length"}
                  .row
                    .col-xs-8.col-xs-offset-2
                      .feedback-content{ng-bind-html: "htmlSafe(question.question_feedback)"}
              .feedback{ng-repeat: "choice in question.choices", ng-if: "choice.choice_feedback"}
                .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                  .row
                    .col-xs-8.col-xs-offset-2
                      .feedback-content{ng-bind-html: "htmlSafe(choice.choice_feedback)"}


.container.operations-container
  .row
    .panel
      .col-sm-12
        .row
          .col-sm-2.col-xs-12
            .panel-label
              %strong
                Operations
              %span.signal-icon.signal-icon-Operations_white.block-align
              
  .row
    .col-sm-12
      %form#questions.form
        .question{id: "question_{{question.id}}", ng-repeat: "question in operationsQuestions", ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
          .row
            .col-xs-12.col-sm-10.col-sm-offset-2
              %fieldset
                .query{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                  %legend
                    {{question.question_text}}
                  .subtext{ng-if: "question.question_subtext.length"}
                    {{question.question_subtext}}
                .answer{ng-class: "{'inline-range': question.question_type === 'inline-range'}"}
                  %div{ng-if: "question.question_type !== 'text'"}
                    %div.choices{ng-if: "question.question_type === 'multi'"}
                      .checkboxes{ng-class: "{columns: question.choices.length > 5}"}
                        .checkbox{ng-repeat: "choice in question.choices"}
                          .xlabel{label-fake: "click"}
                            %input{type: "checkbox", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].choices[$index].answer_text", ng-change: "answer(question, choice)"}
                            %label.radio-mock{for: "choice_{{choice.id}}"}
                              {{choice.choice_text}}
                            %span
                              {{choice.choice_text}}
                          .txt.other-txt{ng-if: "choice.include_text_field", ng-show: "formData[question.id].choices[$index].answer_text"}
                            %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                              Other
                            %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].choices[$index].other_text", ng-blur: "answer(question, choice)"}
                      %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                    %div.choices{ng-if: "question.question_type !== 'multi'"}
                      .radios{ng-class: "{'line-range': question.choices.length > 2, columns: question.choices.length > 5, inline: (question.question_type === 'range' || question.question_type === 'inline-range')}"}
                        .radio{ng-repeat: "choice in question.choices", ng-class: "{'radio-inline': (question.question_type === 'range'  || question.question_type === 'inline-range'), 'hide-alt': (question.choices.length>3)}"}
                          .xlabel{label-fake: "click"}
                            %input{type: "radio", name: "question_{{question.id}}", id: "choice_{{choice.id}}", value: "{{choice.choice_text}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-change: "answer(question, choice)"}
                            %label.radio-mock{for: "choice_{{choice.id}}"}
                              {{choice.choice_text}}
                            %span
                              {{choice.choice_text}}
                          .txt.other-txt{id: "other_{{choice.id}}", ng-if: "choice.include_text_field", ng-show: "formData[question.id].user_response[0].answer_text === 'Other'"}
                            %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                              Other
                            %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text_other", ng-blur: "insertAnswer(question.id, formData[question.id].user_response[0].answer_text_other)"}
                    %input{type: "hidden", value: "{{formData[question.id].user_response[0].answer_text}}", ng-required: "question.required"}
                  %div{ng-if: "question.question_type === 'text'"}
                    .txt{ng-repeat: "choice in question.choices"}
                      %label.other-label.sr-only{for: "question_{{question.id}}_input"}
                        {{question.question_text}}
                      %input.form-control{type: "text", name: "question_{{question.id}}", id: "question_{{question.id}}_input", placeholder: "{{question.id == 6 ? 'Your zip' : 'Your text'}}", ng-model: "formData[question.id].user_response[0].answer_text", ng-blur: "answer(question, choice)", ng-required: "question.required"}
          .row
            .col-xs-12
              .resource.panel.fadein.fadeout{ng-if: "question.question_resources", ng-show: "formData[question.id].user_response.length"}
                .resource-wrapper
                  .row
                    .col-xs-3.col-sm-2
                      .resource-label.panel-label{ng-if: "question.theme"}
                        %strong
                          {{question.theme.name}}
                        %span.signal-icon.signal-icon-Operations_white.block-align
                    .col-xs-9.col-sm-8
                      .resource-content.panel-body
                        .resource-intro{ng-bind-html: "htmlSafe(question.question_resources.intro_text)"}
                    .col-xs-12.col-sm-8.col-sm-offset-2
                      .resource-detail
                        %strong
                          %a{href: "{{question.question_resources.url}}", target: "_blank", title: "{{question.question_resources.title}}"}
                            {{question.question_resources.title}}
                        %p
                          {{question.question_resources.description}}
              .resource.panel.fadein.fadeout{ng-repeat: "choice in question.choices", ng-if: "choice.choice_resources", ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                  .resource-wrapper
                    .row
                      .col-xs-3.col-sm-2
                        .resource-label.panel-label{ng-if: "choice.theme"}
                          %strong
                            {{choice.theme.name}}
                          %span.signal-icon.signal-icon-Operations_white.block-align
                        .resource-label.panel-label{ng-if: "question.theme && !choice.theme"}
                          %strong
                            {{question.theme.name}}
                          %span.signal-icon.signal-icon-Operations_white
                      .col-xs-9.col-sm-8
                        .resource-content.panel-body
                          .resource-intro{ng-bind-html: "htmlSafe(choice.choice_resources.intro_text)"}
                      .col-xs-12.col-sm-8.col-sm-offset-2
                        .resource-detail
                          %strong
                            %a{href: "{{choice.choice_resources.url}}", target: "_blank", title: "{{choice.choice_resources.title}}"}
                              {{choice.choice_resources.title}}
                          %p
                            {{choice.choice_resources.description}}
              .feedback{ng-if: "question.question_feedback"}
                .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response.length"}
                  .row
                    .col-xs-8.col-xs-offset-2
                      .feedback-content{ng-bind-html: "htmlSafe(question.question_feedback)"}
              .feedback{ng-repeat: "choice in question.choices", ng-if: "choice.choice_feedback"}
                .feedback-wrapper.fadein.fadeout{ng-show: "formData[question.id].user_response[0].answer_text == choice.choice_text"}
                  .row
                    .col-xs-8.col-xs-offset-2
                      .feedback-content{ng-bind-html: "htmlSafe(choice.choice_feedback)"}

.footer-container
  .container
    .row
      .col-sm-10.col-sm-offset-2
        .right-arrow
        .right-arrow
        .right-arrow
        .right-arrow
        .right-arrow
        .right-arrow
        %button.btn-link{type: "button", ng-click: "sendData()", loadbtn: "loadbtn"}
          You're done! View your results.
%ng-include{src: "'/angular/partials/site_footer.html'", id: "sitefoot"}